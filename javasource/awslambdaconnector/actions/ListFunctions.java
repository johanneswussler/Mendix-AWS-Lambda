// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package awslambdaconnector.actions;

import java.util.List;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import awslambdaconnector.impl.AWSLambdaClient;
import awslambdaconnector.proxies.ListFunctionsResponse;
import awslambdaconnector.proxies.FunctionResponse;
import software.amazon.awssdk.services.lambda.LambdaClient;
import software.amazon.awssdk.services.lambda.model.FunctionConfiguration;
import software.amazon.awssdk.services.lambda.model.LambdaException;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class ListFunctions extends CustomJavaAction<IMendixObject>
{
	private java.lang.String Region;
	private IMendixObject __Credentials;
	private awsauthentication.proxies.Credentials Credentials;

	public ListFunctions(IContext context, java.lang.String Region, IMendixObject Credentials)
	{
		super(context);
		this.Region = Region;
		this.__Credentials = Credentials;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.Credentials = this.__Credentials == null ? null : awsauthentication.proxies.Credentials.initialize(getContext(), __Credentials);

		// BEGIN USER CODE
		final ILogNode LOGGER = Core.getLogger("AWSLambdaConnector");
		
		LambdaClient lambdaClient = AWSLambdaClient.getLambdaClient(getContext(), Credentials, Region);
		
		ListFunctionsResponse listFunctionResponse = new ListFunctionsResponse(getContext());
		
		try {
			
			software.amazon.awssdk.services.lambda.model.ListFunctionsResponse functionResult = lambdaClient.listFunctions();
			
            List<FunctionConfiguration> list = functionResult.functions();
            for (FunctionConfiguration config: list) {
            	
            	FunctionResponse functionMx = new FunctionResponse(getContext());
            	functionMx.setFunctionResponse_ListFunctionsResponse(listFunctionResponse);
            	functionMx.setFunctionName(config.functionName());
            	functionMx.setCodeSize(config.codeSize());
            	functionMx.setDescription(config.description());
            	functionMx.setFunctionArn(config.functionArn());
            	functionMx.setMemorySize(config.memorySize());
            	functionMx.setPackageType(config.packageTypeAsString());
            	functionMx.setRevisionId(config.revisionId());
            	functionMx.setRole(config.role());
            	functionMx.setRuntime(config.runtimeAsString());
   
            }
			
		} catch (LambdaException e) {
			LOGGER.error("Exception in Java Client Code, Failed to Invoke Function "+e.getMessage());
			throw new MendixRuntimeException(e);
		}
		
		return listFunctionResponse.getMendixObject();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ListFunctions";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
